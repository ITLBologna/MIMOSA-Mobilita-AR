/*
 * Copyright 2022-2023 bitApp S.r.l.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Mimosa Transit API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Contact: info@bitapp.it
 */

package api

import (
	"github.com/bitapp-srl/mimosa-itl-api-go/api/controllers"
	"github.com/gin-gonic/gin"
)

var Router *gin.Engine

// NewRouter returns a new router.
func NewRouter() {
	Router = gin.Default()
	v1 := Router.Group("v1")
	{
		v1.GET("agencies", controllers.GetAllAgencies)

		v1.GET("stops", controllers.GetAllStops)
		v1.GET("stops/:stopId/arrivals", controllers.GetStopArrivals)
		v1.GET("stops/:stopId/updates", controllers.GetStopUpdates)

		v1.GET("routes", controllers.GetAllRoutes)
		v1.GET("routes/:routeId/trips", controllers.GetRouteTrips)

		v1.GET("routes/:routeId/vehicles", controllers.GetRouteVehicles)

		realtime := v1.Group("realtime")
		{
			realtime.GET(":agencyId/vehicle-positions", controllers.GetVehiclePositions)
			realtime.GET(":agencyId/trip-updates", controllers.GetTripUpdates)
		}

		utils := v1.Group("utils")
		{
			utils.GET("stops/distance", controllers.GetStopDistance)
		}

	}
}
